/*************************************************************************
 *
 * Copyright 2001+ MobileWizardry
 * All rights reserved.
 *
 *************************************************************************/

/*
 * @(#)SHARK-core.h
 */

#ifndef SHARK_CORE_H
#define SHARK_CORE_H

#ifdef __cplusplus
extern "C" {
#endif

/*************************************************************************
 * SHARK: extensions
 *************************************************************************
 *
 * HELPER / EXTENSIONS
 * -------------------
 *
 * SHARK provides a core hardware abstraction implementation on devices.
 * The number of functions provided are kept at a minimum to streamline
 * the migration to other platforms - at the same time reduce overhead.
 *
 * SHARK extensions are helper functions to fatten-up the core system to
 * provide more functionality that is optional, or may be needed later.
 *
 * NOTE:
 * SHARK extensions are 100% SHARK - meaning there no platform bindings.
 *
 *************************************************************************/

//------------------------------------------------------------------------
// SYSTEM
//------------------------------------------------------------------------

extern void
_SysEnqueueQuitEvent();

//------------------------------------------------------------------------
// AUDIO
//------------------------------------------------------------------------

// none

//------------------------------------------------------------------------
// FILE
//------------------------------------------------------------------------

extern uint32
_FileGetSize(file *f);

extern boolean
_FileExists(uint32 disk, file *dir, char *name);

extern error
_FileLoadIntoBuffer(file *f, void *buffer, uint32 size);

extern error
_FileShred(file *f);

//------------------------------------------------------------------------
// LCD
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// LIBRARY
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// INPUT
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// MEMORY
//------------------------------------------------------------------------

extern char *
_MemChr(void *p, char chr, uint32 count);

extern int32 
_MemCompare(void *p1, void *p2, uint32 count);

extern char *
_MemRChr(void *p, char chr, uint32 count);

//------------------------------------------------------------------------
// PREFERENCES
//------------------------------------------------------------------------

// none

//------------------------------------------------------------------------
// RESOURCES
//------------------------------------------------------------------------

// none

//------------------------------------------------------------------------
// SOCKET
//------------------------------------------------------------------------

// none

#endif

/********************************* EOF ***********************************/
